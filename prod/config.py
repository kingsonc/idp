# CONFIGURATION FILE FOR BEQCUERELLA

import numpy as np

class Config:
    """Generic values applicable to all tables"""
    CAM_WIDTH = 1600
    CAM_HEIGHT = 1200

    FRAME_POST_PROCESS_SHAPE = (1473,1473)

    TABLE_SIZE = (240,240)

    # Fuel cell tracking
    BLUE_LOWER_THRESH = np.array([90, 70, 130])
    BLUE_UPPER_THRESH = np.array([120, 255, 255])

    # Robot tracking
    GREEN_LOWER_THRESH = np.array([60, 100, 120])
    GREEN_UPPER_THRESH = np.array([90, 255, 255])

    MAP_COORDS = np.float32([[1425,1395],[1473,604],[0,482],[0,977]])

    # PID Controller
    LOOK_AHEAD = 30
    KP = 1700
    MIN_SPD = 20
    MAX_SPD = 80

    INITIAL_PATH = [(150, 17), (149, 17), (148, 17), (147, 17), (146, 17), (145, 17), (144, 17), (143, 17), (142, 17), (141, 17), (140, 17), (139, 17), (138, 17), (137, 17), (136, 17), (135, 17), (134, 17), (133, 17), (132, 17), (131, 17), (130, 17), (129, 17), (128, 17), (127, 17), (126, 17), (125, 17), (124, 17), (123, 17), (122, 17), (121, 17), (120, 17), (119, 17), (118, 17), (117, 17), (116, 17), (115, 17), (114, 17), (113, 17), (112, 17), (111, 17), (110, 17), (109, 17), (108, 17), (107, 17), (106, 17), (105, 17), (104, 17), (103, 17), (102, 17), (101, 17), (100, 17), (99, 17), (98, 17), (97, 17), (96, 17), (95, 17), (94, 17), (93, 17), (92, 17), (91, 17), (90, 17), (89, 17), (88, 17), (87, 17), (86, 17), (85, 17), (84, 17), (83, 17), (82, 17), (81, 17), (80, 17), (79, 17), (78, 17), (77, 17), (76, 17), (75, 17), (74, 17), (73, 17), (72, 17), (71, 17), (70, 17), (69, 17), (68, 17), (67, 17), (66, 17), (65, 17), (64, 17), (63, 17), (62, 17), (61, 17), (60, 17), (60, 17), (60, 17), (60, 17), (59, 17), (58, 17), (57, 17), (56, 17), (55, 18), (54, 19), (53, 17), (52, 21), (51, 22), (50, 23), (49, 24), (48, 25), (47, 26), (46, 27), (45, 28), (44, 29), (43, 30), (42, 31), (41, 32), (40, 33), (39, 34), (38, 35), (37, 36), (36, 37), (35, 38), (35, 39), (35, 40), (35, 41), (35, 42), (35, 43), (35, 44), (35, 45), (35, 46), (35, 47), (35, 48), (35, 49), (35, 50), (35, 51), (35, 52), (35, 53), (35, 54), (35, 55), (35, 56), (35, 57), (35, 58), (35, 59), (35, 60), (35, 61), (35, 62), (35, 63), (35, 64), (35, 65), (35, 66), (35, 67), (35, 68), (35, 69), (35, 70), (35, 71), (35, 72), (35, 73), (35, 74), (35, 75), (35, 76), (35, 77), (35, 78), (35, 79), (35, 80), (35, 81), (35, 82), (35, 83), (35, 84), (35, 85), (35, 86), (35, 87), (35, 88), (35, 89), (35, 90), (35, 91), (35, 92), (35, 93), (35, 94), (35, 95), (35, 96), (35, 97), (35, 98), (35, 99), (35, 100), (35, 101), (35, 102), (35, 103), (35, 104), (35, 105), (35, 106), (35, 107), (35, 108), (35, 109), (35, 110), (35, 111), (35, 112), (35, 113), (35, 114), (35, 115), (35, 116), (35, 117), (35, 118), (35, 119), (35, 120), (35, 121), (35, 122), (35, 123), (35, 124), (35, 125), (35, 126), (35, 127), (35, 128), (35, 129), (35, 130), (35, 131), (35, 132), (35, 133), (35, 134), (35, 135), (35, 136), (35, 137), (35, 138), (35, 139), (35, 140), (35, 141), (35, 142), (35, 143), (35, 144), (35, 145), (35, 146), (35, 147), (35, 148), (35, 149), (35, 150), (35, 151), (35, 152), (35, 153), (35, 154), (35, 155), (35, 156), (35, 157), (35, 158), (35, 159), (35, 160), (35, 161), (35, 162), (35, 163), (35, 164), (35, 165), (35, 166), (35, 167), (35, 168), (35, 169), (35, 170), (35, 171), (35, 172), (35, 173), (35, 174), (35, 175), (35, 176), (35, 177), (35, 178), (35, 179), (35, 180), (35, 181), (35, 182), (35, 183), (35, 184), (35, 185), (35, 186), (35, 187), (35, 188), (35, 189), (35, 190), (35, 191), (35, 192), (35, 193), (35, 194), (35, 195), (35, 196), (35, 197), (35, 198), (35, 199), (35, 200), (35,201), (35,202), (35,203), (35,204), (35,205), (35,206), (35,207), (35,208), (35,209), (35,210), ]
    GO_MIDDLE_PATH = [(120, 140), (120, 139), (120, 138), (120, 137), (120, 136), (120, 135), (120, 134), (120, 133), (120, 132), (120, 131), (120, 130), (120, 129), (120, 128), (120, 127), (120, 126), (120, 125), (120, 124), (120, 123), (120, 122), (120, 121), (120, 120), (120, 119), (120, 118), (120, 117), (120, 116), (120, 115), (120, 114), (120, 113), (120, 112), (120, 111), (120, 110), (120, 109), (120, 108), (120, 107), (120, 106), (120, 105), (120, 104), (120, 103), (120, 102), (120, 101), (120, 100), (120, 99), (120, 98), (120, 97), (120, 96), (120, 95), (120, 94), (120, 93), (120, 92), (120, 91), (120, 90), (120, 89), (120, 88), (120, 87), (120, 86), (120, 85), (120, 84), (120, 83), (120, 82), (120, 81), (120, 80), (120, 79), (120, 78), (120, 77), (120, 76), (120, 75), (121, 74), (122, 73), (123, 72), (124, 71), (124, 70), (125, 69), (126, 68), (127, 67), (128, 66), (129, 65), (130, 64), (131, 63), (132, 62), (133, 61), (134, 60), (135, 59), (136, 58), (137, 57), (138, 56), (139, 55), (140, 54), (141, 53), (142, 52), (143, 51), (144, 50), (145, 49), (146, 48), (147, 47), (147, 46), (147, 45), (147, 44), (147, 43), (147, 42), (147, 41), (147, 40), (147, 39), (147, 38), (147, 37), (147, 36), (147, 35), (147, 34), (147, 33), (147, 32), (147, 31), (147, 30), (147, 29), (147, 28), (147, 27), (147, 26), (147, 25), (147, 24), (147, 23), (147, 22), (147, 21), (148, 20), (149, 19), (149, 18), (150, 17)]
    REVERSE_PATH = [(120, 240), (120, 239), (120, 238), (120, 237), (120, 236), (120, 235), (120, 234), (120, 233), (120, 232), (120, 231), (120, 230), (120, 229), (120, 228), (120, 227), (120, 226), (120, 225), (120, 224), (120, 223), (120, 222), (120, 221), (120, 220), (120, 219), (120, 218), (120, 217), (120, 216), (120, 215), (120, 214), (120, 213), (120, 212), (120, 211), (120, 210), (120, 209), (120, 208), (120, 207), (120, 206), (120, 205), (120, 204), (120, 203), (120, 202), (120, 201), (120, 200), (120, 199), (120, 198), (120, 197), (120, 196), (120, 195), (120, 194), (120, 193), (120, 192), (120, 191), (120, 190), (120, 189), (120, 188), (120, 187), (120, 186), (120, 185), (120, 184), (120, 183), (120, 182), (120, 181), (120, 180), (120, 179), (120, 178), (120, 177), (120, 176), (120, 175), (120, 174), (120, 173), (120, 172), (120, 171), (120, 170), (120, 169), (120, 168), (120, 167), (120, 166), (120, 165), (120, 164), (120, 163), (120, 162), (120, 161), (120, 160), (120, 159), (120, 158), (120, 157), (120, 156), (120, 155), (120, 154), (120, 153), (120, 152), (120, 151), (120, 150), (120, 149), (120, 148), (120, 147), (120, 146), (120, 145), (120, 144), (120, 143), (120, 142), (120, 141), (120, 140)]
    # TEST_PATH = [(35, 120), (36, 120), (37, 120), (38, 120), (39, 120), (40, 120), (41, 120), (42, 120), (43, 120), (44, 120), (45, 120), (46, 120), (47, 120), (48, 120), (49, 120), (50, 120), (51, 120), (52, 120), (53, 120), (54, 120), (55, 120), (56, 120), (57, 120), (58, 120), (59, 120), (60, 120), (61, 120), (62, 120), (63, 120), (64, 120), (65, 120), (66, 120), (67, 120), (68, 120), (69, 120), (70, 120), (71, 120), (72, 120), (73, 120), (74, 120), (75, 120), (76, 120), (77, 120), (78, 120), (79, 120), (80, 120), (81, 120), (82, 120), (83, 120), (84, 120), (85, 120), (86, 120), (87, 120), (88, 120), (89, 120), (90, 120), (91, 120), (92, 120), (93, 120), (94, 120), (95, 120), (96, 120), (97, 120), (98, 120), (99, 120), (100, 120), (101, 120), (102, 120), (103, 120), (104, 120), (105, 120), (106, 120), (107, 120), (108, 120), (109, 120), (110, 120), (111, 120), (112, 120), (113, 120), (114, 120), (115, 120), (116, 120), (117, 120), (118, 120), (119, 120), (120, 120), (121, 120), (122, 120), (123, 120), (124, 120), (125, 120), (126, 120), (127, 120), (128, 120), (129, 120), (130, 120), (131, 120), (132, 120), (133, 120), (134, 120), (135, 120), (136, 120), (137, 120), (138, 120), (139, 120), (140, 120), (141, 120), (142, 120), (143, 120), (144, 120), (145, 120), (146, 120), (147, 120), (148, 120), (149, 120), (150, 120), (151, 120), (152, 120), (153, 120), (154, 120), (155, 120), (156, 120), (157, 120), (158, 120), (159, 120), (160, 120), (161, 120), (162, 120), (163, 120), (164, 120), (165, 120), (166, 120), (167, 120), (168, 120), (169, 120), (170, 120), (171, 120), (172, 120), (173, 120), (174, 120), (175, 120), (176, 120), (177, 120), (178, 120), (179, 120), (180, 120), (181, 120), (182, 120), (183, 120), (184, 120), (185, 120), (186, 120), (187, 120), (188, 120), (189, 120), (190, 120), (191, 120), (192, 120), (193, 120), (194, 120), (195, 120), (196, 120), (197, 120), (198, 120), (199, 120)]

class Table3Config(Config):
    """Specific values only applicable to table 3"""
    TABLE = 3

    CAM_BRIGHTNESS = 50
    CAM_CONTRAST = 50
    CAM_SATURATION = 80

    # Perspective transformation
    CAMERA_COORDS = np.float32([[1417,1393],[1466,606],[10,495],[4,999]])

    # Trim to only display table area
    TABLE_EDGE_TOP = 55
    TABLE_EDGE_BOT = 1528

    # Padding to cover missing area not visible in camera
    TABLE_BORDER_FILL_LEFT = 74
    TABLE_BORDER_FILL_RIGHT = 199


class Table2Config(Config):
    """Specific values only applicable to table 3"""
    CAM_BRIGHTNESS = 60
    CAM_CONTRAST = 48
    CAM_SATURATION = 70

    # Perspective transformation
    CAMERA_COORDS = np.float32([[1417,1393],[1466,606],[10,495],[4,999]])

    # Trim to only display table area
    TABLE_EDGE_TOP = 55
    TABLE_EDGE_BOT = 1528

    # Padding to cover missing area not visible in camera
    TABLE_BORDER_FILL_LEFT = 74
    TABLE_BORDER_FILL_RIGHT = 199

current_config = Table3Config()
